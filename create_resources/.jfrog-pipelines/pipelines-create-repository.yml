pipelines:
  - name: repository_create
    configuration:
      retentionPolicy:
        maxAgeDays: 30
        minRuns: 10
      integrations:
        - name: jpd_token
      environmentVariables:
        readOnly:
          repoType:
            default: "local"
            description: "Select the Repository Type"
            values:
              - "local"
              - "remote"
              - "virtual"
              - "federated"
          packageType:
            default: "alpine"
            description: "Select the Package Type"
            values:
              - "alpine"
              - "bower"
              - "cargo"
              - "chef"
              - "cocoapods"
              - "conan"
              - "conda"
              - "cran"
              - "debian"
              - "docker"
              - "gems"
              - "generic"
              - "gitlfs"
              - "go"
              - "gradle"
              - "helm"
              - "helmoci"
              - "huggingfaceml"
              - "ivy"
              - "maven"
              - "npm"
              - "nuget"
              - "oci"
              - "opkg"
              - "php"
              - "pub"
              - "puppet"
              - "pypi"
              - "rpm"
              - "sbt"
              - "swift"
              - "terraform-modules"
              - "vagrant"
          repoName: ""
          remote_repo_url: ""
          remote_username: ""
          remote_password:
            default: ""
            secure: true
          virtual_default_deployment_repo: ""
          virtual_repositories_add_list: ""
    steps:
    - name: setup_configuration
      type: Bash
      configuration:
        affinityGroup: repo_group
        integrations:
          - name: jpd_token
      execution:
        onStart:
          - |
            echo "Installing Packages...."
            sudo apt-get install jq
            sudo curl -fL https://install-cli.jfrog.io | sh
            jq --version
            jf --version
            python3 --version
        onExecute:
          - jf c add psapac --url="https://psapac.jfrog.io/" --access-token="${int_jpd_token_auto_admin}" --interactive=false
          - jf c show
          - jf rt ping
  
    - name: local_repo_creation
      type: Bash
      configuration:
        integrations:
          - name: jpd_token
        inputSteps:
          - name: setup_configuration
        condition: 'repoType == "local"' 
        inputResources:
          - name: JFrog_Automation_Repo
            trigger: false
      execution:
        onStart:
          - |
            echo "Installing Packages...."
            sudo apt-get install jq
            sudo curl -fL https://install-cli.jfrog.io | sh
            jq --version
            jf --version
        onExecute:
          - jf c add psapac --url="https://psapac.jfrog.io/" --access-token="${int_jpd_token_auto_admin}" --interactive=false
          - jf c show
          - jf rt ping
          - echo "Creating ${repoType} repository with package type - ${packageType} and repo name - ${repoName}"
          - cd ./dependencyState/resources/JFrog_Automation_Repo/create_resources/
          - chmod +x createLocalRepo.sh
          - ./createLocalRepo.sh "${repoType}" "${packageType}" "${repoName}"
        onComplete:
          - echo "Completed creating ${repoType} repository with package type - ${packageType} and repo name - ${repoName}"

    - name: remote_repo_creation
      type: Bash
      configuration:
        integrations:
          - name: jpd_token
        inputSteps:
          - name: setup_configuration
        condition: 'repoType == "remote"' 
        inputResources:
          - name: JFrog_Automation_Repo
            trigger: false
      execution:
        onStart:
          - |
            echo "Installing Packages...."
            sudo apt-get install jq
            sudo curl -fL https://install-cli.jfrog.io | sh
            jq --version
            jf --version
        onExecute:
          - jf c add psapac --url="https://psapac.jfrog.io/" --access-token="${int_jpd_token_auto_admin}" --interactive=false
          - jf c show
          - jf rt ping
          - echo "Creating ${repoType} repository with package type - ${packageType} and repo name - ${repoName}"
          - cd ./dependencyState/resources/JFrog_Automation_Repo/create_resources/
          - chmod +x createRemoteRepo.sh
          - ./createRemoteRepo.sh "${repoType}" "${packageType}" "${repoName}" "${remote_repo_url}" "${remote_username}" "${remote_password}"
        onComplete:
          - echo "Completed creating ${repoType} repository with package type - ${packageType} and repo name - ${repoName}"

    - name: virtual_repo_creation
      type: Bash
      configuration:
        integrations:
          - name: jpd_token
        inputSteps:
          - name: setup_configuration
        condition: 'repoType == "virtual"' 
        inputResources:
          - name: JFrog_Automation_Repo
            trigger: false
      execution:
        onStart:
          - |
            echo "Installing Packages...."
            sudo apt-get install jq
            sudo curl -fL https://install-cli.jfrog.io | sh
            jq --version
            jf --version
        onExecute:
          - jf c add psapac --url="https://psapac.jfrog.io/" --access-token="${int_jpd_token_auto_admin}" --interactive=false
          - jf c show
          - jf rt ping
          - echo "Creating ${repoType} repository with package type - ${packageType} and repo name - ${repoName}"
          - cd ./dependencyState/resources/JFrog_Automation_Repo/create_resources/
          - chmod +x createVirtualRepo.sh
          - ./createVirtualRepo.sh "${repoType}" "${packageType}" "${repoName}" "${virtual_default_deployment_repo}" "${virtual_repositories_add_list}"
        onComplete:
          - echo "Completed creating ${repoType} repository with package type - ${packageType} and repo name - ${repoName}"

    - name: federated_repo_creation
      type: Bash
      configuration:
        integrations:
          - name: jpd_token
        inputSteps:
          - name: setup_configuration
        condition: 'repoType == "federated"' 
        inputResources:
          - name: JFrog_Automation_Repo
            trigger: false
      execution:
        onStart:
          - |
            echo "Installing Packages...."
            sudo apt-get install jq
            sudo curl -fL https://install-cli.jfrog.io | sh
            jq --version
            jf --version
        onExecute:
          - jf c add psapac --url="https://psapac.jfrog.io/" --access-token="${int_jpd_token_auto_admin}" --interactive=false
          - jf c show
          - jf rt ping
          - echo "Creating ${repoType} repository with package type - ${packageType} and repo name - ${repoName}"
          - cd ./dependencyState/resources/JFrog_Automation_Repo/create_resources/
          - chmod +x createFederatedRepo.sh
          - ./createFederatedRepo.sh "${repoType}" "${packageType}" "${repoName}"
        onComplete:
          - echo "Completed creating ${repoType} repository with package type - ${packageType} and repo name - ${repoName}"


resources:
  - name: pipelines_script_repo_2
    type: GitRepo
    configuration:
      gitProvider: github_ram
      path: ramkannan-s/jfrog-pipelines-sample-1
      branches:
        include: main
        
  - name: maven_repo
    type: GitRepo
    configuration:
      gitProvider: github_ram
      path: ramkannan-s/frogbot-maven-hello-world
      branches:
        include: main
        
  - name: mvn_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: artifactory
   
  - name: docker_buildinfo
    type: BuildInfo
    configuration:
      sourceArtifactory: artifactory
        
pipelines:
  - name: maven_ci_build_normal_jfrog
    steps:
    - name: maven_build_normal
      type: Bash
      configuration:
        integrations:
          - name: genericcreds
        inputResources:
          - name: maven_repo     # Trigger execution on code commit
      execution:
        onStart:
          - |
            wget https://download.java.net/java/GA/jdk13.0.1/cec27d702aa74d5a8630c65ae61e4305/9/GPL/openjdk-13.0.1_linux-x64_bin.tar.gz
            tar -xvf openjdk-13.0.1_linux-x64_bin.tar.gz
            mv jdk-13.0.1 /opt/
            JAVA_HOME='/opt/jdk-13.0.1'
            PATH="$JAVA_HOME/bin:$PATH"
            export PATH
            
            wget https://mirrors.estointernet.in/apache/maven/maven-3/3.8.5/binaries/apache-maven-3.8.5-bin.tar.gz
            tar -xvf apache-maven-3.8.5-bin.tar.gz
            mv apache-maven-3.8.5 /opt/
            M2_HOME='/opt/apache-maven-3.8.5'
            PATH="$M2_HOME/bin:$PATH"
            export PATH
            mvn -version
            
        onExecute:
          - echo "Hello World!"
          - cd ./dependencyState/resources/maven_repo/
          - mvn clean install
          - ls -lsa
          - printenv int_genericcreds_india
        onComplete:
          - ls -lR
          - add_run_files ./target/ramlab_hello-1.0.1.jar test.jar 
          
    - name: maven_build_jfrog
      type: MvnBuild
      configuration:
        timeoutSeconds: 300      # 5 minutes
        allowFailure: true
        requiresApproval: true
        deployerSnapshotRepo: "mvn-local-snapshot"
        deployerReleaseRepo: "mvn-local-release"
        inputResources:
          - name: maven_repo
        integrations:
          - name: artifactory

    - name: maven_app_build_publish
      type: PublishBuildInfo
      configuration:
        forceXrayScan: true
        inputSteps:
          - name: maven_build_jfrog
            status:
              - success
        outputResources:
          - name: mvn_build_info
          
    - name: failure_maven_build
      type: Bash
      configuration:
        inputSteps:
          - name: maven_build_jfrog
            status:
              - failure
              - error
              - timeout
              - cancelled
              - skipped
              - unstable
      execution:
        onExecute:
          - echo "The Step - maven_build_jfrog has failed or cancelled or timedout. Hence, Cannot RUN PublishBuild Info Part"
          - printenv


    - name: docker_build
      type: DockerBuild
      configuration:
        affinityGroup: docker_group
        dockerFileLocation: .
        dockerFileName: Dockerfile
        dockerImageName: proservices.jfrog.io/docker-pipelines-demo-1/mavenbuild    # replace with your fully qualified Docker registry/image name
        dockerImageTag: ${run_number}
        inputResources:
          - name: maven_repo
        integrations:
          - name: artifactory

    - name: docker_push
      type: DockerPush
      configuration:
        affinityGroup: docker_group
        targetRepository: docker-pipelines-demo-1
        integrations:
          - name: artifactory                           
        inputSteps:
          - name: docker_build

    - name: docker_app_build_publish
      type: PublishBuildInfo
      configuration:
        affinityGroup: docker_group
        inputSteps:
          - name: docker_push
        outputResources:
          - name: docker_buildinfo

    - name: restore_jar_file
      type: Bash
      configuration:
        inputSteps:
          - name: maven_build_normal
      execution:
        onStart:
          - restore_run_files test.jar test.jar    # save the contents of 'cachefile.txt' to 'myfile'
        onExecute:
          - ls test.jar
          - echo "Hello world"
